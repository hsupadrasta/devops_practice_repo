from selenium import webdriver
import networkx as nx

# access webpage
driver = webdriver.Firefox()
driver.get("https://www.example.com")

# retrieve all elements on webpage
elements = driver.find_elements_by_tag_name("*")

# create graph object
G = nx.Graph()

# add elements as nodes in graph
for element in elements:
    G.add_node(element)

# check location of elements and create edges
for i in range(len(elements)):
    for j in range(i+1, len(elements)):
        element1 = elements[i]
        element2 = elements[j]
        if is_adjacent(element1, element2):
            G.add_edge(element1, element2)
        if is_inside(element1, element2):
            G.add_edge(element1, element2)

# visualize and analyze graph
nx.draw(G)
nx.info(G)
def is_adjacent(element1, element2):
    # get coordinates and dimensions of element 1
    x1, y1, width1, height1 = element1.location['x'], element1.location['y'], element1.size['width'], element1.size['height']
    # get coordinates and dimensions of element 2
    x2, y2, width2, height2 = element2.location['x'], element2.location['y'], element2.size['width'], element2.size['height']
    # check if element 1 and element 2 are adjacent horizontally
    if (x1 + width1 == x2 or x2 + width2 == x1) and (y1 < y2 + height2 and y1 + height1 > y2):
        return True
    # check if element 1 and element 2 are adjacent vertically
    if (y1 + height1 == y2 or y2 + height2 == y1) and (x1 < x2 + width2 and x1 + width1 > x2):
        return True
    return False

def is_inside(element1, element2):
    # get coordinates and dimensions of element 1
    x1, y1, width1, height1 = element1.location['x'], element1.location['y'], element1.size['width'], element1.size['height']
    # get coordinates and dimensions of element 2
    x2, y2, width2, height2 = element2.location['x'], element2.location['y'], element2.size['width'], element2.size['height']
    # check if element 1 is inside element 2
    if x1 > x2 and y1 > y2 and x1 + width1 < x2 + width2 and y1 + height1 < y2 + height2:
        return True
    return False
