import os
from tkinter import Tk, Label, Button, Canvas
from PIL import ImageTk, Image

class ImageViewer:
    def __init__(self, root, folder_path):
        self.root = root
        self.folder_path = folder_path
        self.images = []
        self.current_image = None
        self.load_images()
        self.create_widgets()

    def load_images(self):
        for file in os.listdir(self.folder_path):
            if file.endswith(".jpg") or file.endswith(".png"):
                self.images.append(file)
        self.images.sort()

    def create_widgets(self):
        self.canvas = Canvas(self.root)
        self.canvas.grid(row=0, column=0)
        self.display_images()
        self.create_close_button()

    def display_images(self):
        x = self.canvas.winfo_width()/2-100
        y = self.canvas.winfo_height()/2-100
        for image_name in self.images:
            image = Image.open(self.folder_path + "/" + image_name)
            image.thumbnail((100, 100))
            photo = ImageTk.PhotoImage(image)
            label = Label(self.canvas, image=photo, width=100, height=100)
            label.image = photo
            label.bind("<Button-1>", self.display_image)
            self.canvas.create_window(x, y, window=label)
            x += 120
            if x > self.canvas.winfo_width()/2+100:
                x = self.canvas.winfo_width()/2-100
                y += 120

     def display_image(self, event):
        self.current_image = Image.open(self.folder_path + "/" + event.widget.image_name)
        self.canvas.delete("all")
        photo = ImageTk.PhotoImage(self.current_image)
        self.canvas.create_image(self.canvas.winfo_width()/2, self.canvas.winfo_height()/2, image=photo, anchor="center")
        self.create_close_button()
        
    def create_close_button(self):
        close_button = Button(self.canvas, text="Close", command=self.close_image)
        self.canvas.create_window(self.canvas.winfo_width()/2, self.canvas.winfo_height()-20, window=close_button)

    def close_image(self):
        self.current_image = None
        self.canvas.delete("all")
        self.display_images()

if __name__ == "__main__":
    root = Tk()
    folder_path = "path/to/folder"
    viewer = ImageViewer(root, folder_path)
    root.mainloop()
    def display_images(self):
        x = self.canvas.winfo_width()/2-100
        y = self.canvas.winfo_height()/2-100
        for image_name in self.images:
            image = Image.open(self.folder_path + "/" + image_name)
            image.thumbnail((100, 100))
            photo = ImageTk.PhotoImage(image)
            label = Label(self.canvas, image=photo, width=100, height=100)
            label.image = photo
            label.image_name = image_name 
            label.bind("<Button-1>", self.display_image)
            self.canvas.create_window(x, y, window=label)
            x += 120
            if x > self.canvas.winfo_width()/2+100:
                x = self.canvas.winfo_width()/2-100
                y += 120
